<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:netsuite="http://www.mulesoft.org/schema/mule/netsuite" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/netsuite http://www.mulesoft.org/schema/mule/netsuite/current/mule-netsuite.xsd">
	<munit:config name="test-suite.xml" doc:name="MUnit configuration" />
	<configuration-properties doc:name="Configuration properties"
		doc:id="9ccff924-f3a9-422c-a218-11c91dde07b9" file="mule.test.properties" />
	<munit:before-test name="test-suiteBefore_Test"
		description="Before tests actions" doc:id="bb4fa39e-76b9-41c9-82c0-cc68ffadba9c">
		<ee:transform doc:name="Prepare test opportunity data" doc:id="37727b44-ce8a-406a-a058-7de723f7f81c">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="dynamicDataInput"><![CDATA[%dw 2.0
output application/java
var uniqueName = "TestRecord" ++ randomInt(10000)
---
{
    "Account": {
      "Id": "0012000001b26f3AAA",
      "type": "Account",
      "Name": uniqueName
    },
    "StageName": "Closed Won",
    "Amount": "2000.0",
    "OpportunityLineItems": [
      {
        "Product2Id": "01t20000004d9qpAAA",
        "ProductCode": "GC1060",
        "Quantity": "2.0",
        "ListPrice": "100.0",
        "Name": uniqueName ++ "GenWatt Diesel 1000kW"
      }      
    ],
    
    "Id": "0062000000j4mIdAAI",
    "Name": uniqueName
  }]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<munit-tools:mock-when doc:name="Mock email processor to avoid sending email"
			doc:id="4b0560aa-efd4-4906-b389-a95723830e61" processor="email:send">
			<munit-tools:then-return />
		</munit-tools:mock-when>
	</munit:before-test>
	<munit:test name="test-suite-businesslogicFlowTest"
		description="Test" doc:id="372e91b3-4516-48a5-8b77-d62814dfec22">
		<munit:execution>
			<ee:transform doc:name="Tests records" doc:id="4103ee54-6ed5-4371-94d3-e16a5af7dd1b">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[vars.dynamicDataInput]]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="businesslogicFlow" doc:id="8ad9093b-24c1-485e-bfab-e85caa57c1ef"
				name="businessLogicFlow" />
			<scripting:execute doc:name="Sleep for 30s until the processing is completed"
				doc:id="bcd63e0a-8801-431a-baa3-f4ac80ff448a" engine="groovy">
				<scripting:code>sleep(30000)</scripting:code>
			</scripting:execute>
			<flow-ref doc:name="checkInventoryItem" doc:id="558f0990-d8ac-4b18-986e-ea33fd543157"
				name="checkMigratedrecords" />
		</munit:execution>
		<munit:validation>
			
			<munit-tools:assert-that doc:name="Assert of migrated account name"
				doc:id="b72fbde8-68a4-430e-baaf-7f60e11d3776" expression="#[vars.dynamicDataInput.Account.Name]"
				is="#[MunitTools::equalTo(vars.migratedAccountNetSuite.companyName)]"
				message="Assert of account name" />
			<munit-tools:assert-that doc:name="Assert of migrated inventory item" doc:id="16391d39-fded-4501-a9f4-4c649fb1d838" expression="#[sizeOf(vars.migratedInventoryItem)]" is="#[MunitTools::greaterThan(0)]" message="Assert of migrated inventory item" />
			<munit-tools:assert-that doc:name="Assert of migrated sales order" doc:id="8e7d1e5c-8e72-4a7c-9c09-0eaebffb6a2d" expression="#[sizeOf(vars.migratedSalesOrder)]" is="#[MunitTools::greaterThan(0)]" message="Assert of migrated sales order" />
			
			</munit:validation>
	</munit:test>
	<sub-flow name="checkMigratedrecords" doc:id="aa60429c-db82-4e40-b457-3cb33a1f6059">
	<netsuite:get-record recordType="CUSTOMER" doc:name="Get Customer" doc:id="c3e32429-5895-4cd6-b6d7-600b25916d5a" config-ref="NetSuite_Config" externalId="0012000001b26f3AAA" internalId="#[null]" />
		
		<set-variable value="#[payload]" doc:name="Set account variable"
			doc:id="a264737e-4ce6-463a-a642-6520cbbffd1c" variableName="migratedAccountNetSuite" />
		<netsuite:get-record recordType="INVENTORY_ITEM" doc:name="Get inventory item" doc:id="40284b3d-38df-412d-a2dc-4e622d6f6239" config-ref="NetSuite_Config" externalId="01t20000004d9qpAAA" internalId="#[null]" />
		<set-variable value="#[payload]" doc:name="Set inventory item variable" doc:id="7d258e3b-e5c3-43d9-9638-95e6b60695c8" variableName="migratedInventoryItem" />
		<netsuite:get-record recordType="SALES_ORDER" doc:name="Get sales order" doc:id="36603160-ae59-4be6-a904-479b4cdbf1b2" config-ref="NetSuite_Config" externalId="0062000000j4mIdAAI" internalId="#[null]" />
		<set-variable value="#[payload]" doc:name="Set sales order variable" doc:id="7509c434-c281-4e23-ad67-a0c8c3aeffaf" variableName="migratedSalesOrder" />
	</sub-flow>
	<munit:after-test name="test-suiteAfter_Test" description="After tests actions" doc:id="a8cad7e5-0811-456c-8819-3260962eb2b2">
		<ee:transform doc:name="Mapping for deleting of migrated Sales order in NetSuite" doc:id="5e98f3a7-1717-4659-8ad2-98e02c27df86">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	internalId: vars.migratedSalesOrder.internalId,
	"type": "SALES_ORDER"
} as Object {
	class : "org.mule.module.netsuite.extension.api.RecordRef"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<netsuite:delete-record doc:name="Delete migrated Sales order in NetSuite" doc:id="e90e308c-dd35-4eab-96a6-2ab069692c4e" config-ref="NetSuite_Config">
		</netsuite:delete-record>
		<ee:transform doc:name="Mapping for deleting of migrated Account in NetSuite" doc:id="18d32072-ec4e-4659-85f0-76379348e4db">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	internalId: vars.migratedAccountNetSuite.internalId,
	"type": "CUSTOMER"
} as Object {
	class : "org.mule.module.netsuite.extension.api.RecordRef"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<netsuite:delete-record doc:name="Delete migrated Account in NetSuite" doc:id="976a26b0-8d07-4573-8985-7d94ee1b1803" config-ref="NetSuite_Config">
		</netsuite:delete-record>
	</munit:after-test>
</mule>